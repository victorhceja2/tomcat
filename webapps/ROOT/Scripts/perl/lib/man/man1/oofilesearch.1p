.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "OOFILESEARCH 1p"
.TH OOFILESEARCH 1p "2006-02-04" "perl v5.8.4" "User Contributed Perl Documentation"
.SH "NAME"
.Vb 1
\&        oofilesearch - File selection by keywords
.Ve
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&        oofilesearch -R "D:\eDocuments\e*.sxw" openoffice desktop XML
.Ve
.PP
.Vb 3
\&        produces the list of the OOo-Writer documents present in the given
\&        directory and its subdirectories, and containing the words
\&        "openoffice", "desktop" AND "XML"
.Ve
.PP
.Vb 1
\&        oofilesearch -command "rm -f %f" "*.sxc *.sxw" lost dismiss cancel
.Ve
.PP
.Vb 3
\&        executes the "rm -f filename" (i.e. deletes the file in a Unix system)
\&        for each OOo-Writer or OOo-Calc file present in the current directory
\&        and containing the words "lost", "dismiss" AND "cancel"
.Ve
.SH "USAGE"
.IX Header "USAGE"
.Vb 1
\&        oofilesearch [-options] <file filter> <keyword list>
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.Vb 4
\&        This utility allows the user to retrieve a list of files matching
\&        a given set of keywords or regular expressions. A file is selected
\&        when it contains, in its text and/or in its metadata (title, subject,
\&        keywords or description), all the given search strings.
.Ve
.PP
.Vb 5
\&        The selected files are echoed to the standard output (one file per
\&        line), so this utility can be used as a filter piping its results
\&        to another program. Alternatively, a given shell command can be
\&        launched by the script each time a file matches, allowing on-the-fly
\&        processing of the selected documents.
.Ve
.PP
.Vb 3
\&        The files filter may content one or more space-separated paths.
\&        Each path may content jokers. So it's possible to explore several
\&        directories and/or several filename patterns.
.Ve
.PP
.Vb 2
\&        All the arguments after the file filter are processed as search
\&        criteria.
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.Vb 28
\&        -R -recursive
\&                include the subdirectories of each given search directory
\&        -verbose -trace -debug
\&                echo some processing comments
\&        -warnings
\&                activate the warning messages of the OpenOffice::OODoc API
\&        -log <file>
\&                like -verbose, but then messages are sent to the given file
\&                and don't pollute the standard output
\&        -result <file>
\&        -output <file>
\&                send the list of matching files to the given file and not
\&                to the standard output
\&        -criteria <file>
\&                get search criteria from a file (one per line); the loaded
\&                search keywords may be combined with additional criteria
\&                passed with the command line, if any.
\&        -command <command> -exec <command>
\&                execute a shell command for each matching file ; if the
\&                command string contains "%f", this substring is replaced
\&                with the name of the selected file ; if this option is
\&                provided, the selection list is not echoed to the standard
\&                output ; if -verbose is on, the value returned by the
\&                command is echoed
\&        -encoding <encoding>
\&                selects the user's character set ; this option is mandatory
\&                if one or more search criteria contain characters not
\&                belonging to the default character set
.Ve
